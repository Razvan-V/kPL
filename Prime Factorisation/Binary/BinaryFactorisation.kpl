env {} (Env) - root {} (Root) - gen {
x_b_1, y_b_1, p_b_1,  

// N_b_4, N_b_3, N_b_2, N_b_1,

N_b_8, N_b_7, N_b_5, N_b_1,

 comp_p_new, m, r} (genComp) .

type Env{

}

type Root{

    // Solution found
    max{
        =s   :   X_b_1   ->   X_b_1  (Env)   .
        =s   :   X_b_2   ->   X_b_2  (Env)   .
        =s   :   X_b_3   ->   X_b_3  (Env)   .
        =s   :   X_b_4   ->   X_b_4  (Env)   .
        =s   :   X_b_5   ->   X_b_5  (Env)   .
        =s   :   X_b_6   ->   X_b_6  (Env)   .
        =s   :   X_b_7   ->   X_b_7  (Env)   .
        =s   :   X_b_8   ->   X_b_8  (Env)   .

        =s   :   Y_b_1   ->   Y_b_1  (Env)   .
        =s   :   Y_b_2   ->   Y_b_2  (Env)   .
        =s   :   Y_b_3   ->   Y_b_3  (Env)   .
        =s   :   Y_b_4   ->   Y_b_4  (Env)   .
        =s   :   Y_b_5   ->   Y_b_5  (Env)   .
        =s   :   Y_b_6   ->   Y_b_6  (Env)   .
        =s   :   Y_b_7   ->   Y_b_7  (Env)   .
        =s   :   Y_b_8   ->   Y_b_8  (Env)   .
		
		m -> .
    }
    // END of Solution found
	
	choice{
	 =2s : s -> .
	 =1s : s-> # .
	}
}

type genComp{	
	m -> m, m (Root) .
    max{
     //  ~ IF y>L : new -> STOP. ~ 
    	=P_GTR_N :   r    ->   #   .
    	
    	>=SOL   :  x_b_1  ->  X_b_1 (Root) .
    	>=SOL   :  x_b_2  ->  X_b_2 (Root) .
    	>=SOL   :  x_b_3  ->  X_b_3 (Root) .
    	>=SOL   :  x_b_4  ->  X_b_4 (Root) .
    	>=SOL   :  x_b_5  ->  X_b_5 (Root) .
    	>=SOL   :  x_b_6  ->  X_b_6 (Root) .
    	>=SOL   :  x_b_7  ->  X_b_7 (Root) .
    	>=SOL   :  x_b_8  ->  X_b_8 (Root) .
    	
    	>=SOL   :  y_b_1  ->  Y_b_1 (Root) .
    	>=SOL   :  y_b_2  ->  Y_b_2 (Root) .
    	>=SOL   :  y_b_3  ->  Y_b_3 (Root) .
    	>=SOL   :  y_b_4  ->  Y_b_4 (Root) .
    	>=SOL   :  y_b_5  ->  Y_b_5 (Root) .
    	>=SOL   :  y_b_6  ->  Y_b_6 (Root) .
    	>=SOL   :  y_b_7  ->  Y_b_7 (Root) .
    	>=SOL   :  y_b_8  ->  Y_b_8 (Root) .
 
   		// Compute comp_p_new   :   p = (p + 4) + 4y 
    	=comp_p_new | =comp_p  : p_b_8 ->    z_b_8  .   		
		=comp_p_new | =comp_p  : p_b_7 ->    z_b_7  .
		=comp_p_new | =comp_p  : p_b_6 ->    z_b_6  .
		=comp_p_new | =comp_p  : p_b_5 ->    z_b_5  .
		=comp_p_new | =comp_p  : p_b_4 ->    z_b_4  .
		=comp_p_new | =comp_p  : p_b_3 ->    z_b_3  .
		=comp_p_new | =comp_p  : p_b_2 ->    z_b_2  .
		=comp_p_new | =comp_p  : p_b_1 ->    z_b_1  .
    	
    	comp_p_new  ->  p_step_1,   LSHIFT2  .
    	comp_p   -> comp_p_sum, LSHIFT  .
   
    	// ~ solution found ~
    	(<P_GTR_N  & <P_LESS_N) & (=3chk_sol | =2chk_sol)   : r  -> {SOL}, 2s (Root) . 
    	
     	=chk_sol &   =P_LESS_N  & <SOL  : d , P_LESS_N   -> Division .
     	=chk_sol &   =P_LESS_N  & <d :  P_LESS_N   -> comp_p . 
     	
     	(=chk_sol | =2chk_sol) & (<P_LESS_N) : chk_sol -> .   	
     	Division  -> [comp_p][comp_p_new] .

    	=ADD    :  2z_b_1 -> z_b_2  . 
    	=ADD    :  2z_b_2 -> z_b_3  . 
    	=ADD    :  2z_b_3 -> z_b_4  . 
    	=ADD    :  2z_b_4 -> z_b_5  . 
    	=ADD    :  2z_b_5 -> z_b_6  . 
    	=ADD    :  2z_b_6 -> z_b_7  . 
    	=ADD    :  2z_b_7 -> z_b_8  . 
    	=ADD    :  2z_b_8 -> z_b_9  . 
	
     	// ~ Manage workflow  ~
		=S_DONE  &  =p_step_1   :   r   ->  r,  z_b_3    .
        =S_DONE  & (=p_step_2 | =comp_p_sum)  : r -> r, z_b_2  .
         
        S_DONE  ,  p_step_1     -> ADD,   p_step_2   .
        S_DONE  ,  p_step_2     -> ADD,   y_plus_two  . 
        S_DONE  ,  comp_p_sum   -> ADD,   yy_plus_two  .
        S_DONE  ,  y_plus_two   -> cmp_p  , d .
        S_DONE  ,  yy_plus_two   -> cmp_p   .
        
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_1   ->   p_b_1 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_2   ->   p_b_2 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_3   ->   p_b_3 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_4   ->   p_b_4 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_5   ->   p_b_5 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_6   ->   p_b_6 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_7   ->   p_b_7 .
        (=S_DONE & =p_step_2) | (=S_DONE & =comp_p_sum )   :   z_b_8   ->   p_b_8 .
        
        =S_DONE & =p_step_2   :   y_b_1   ->   z_b_1 .
        =S_DONE & =p_step_2   :   y_b_2   ->   z_b_2 .
        =S_DONE & =p_step_2   :   y_b_3   ->   z_b_3 .
        =S_DONE & =p_step_2   :   y_b_4   ->   z_b_4 .
        =S_DONE & =p_step_2   :   y_b_5   ->   z_b_5 .
        =S_DONE & =p_step_2   :   y_b_6   ->   z_b_6 .
        =S_DONE & =p_step_2   :   y_b_7   ->   z_b_7 .
        =S_DONE & =p_step_2   :   y_b_8   ->   z_b_8 .       
        
		=y_plus_two : x_b_1 -> .
		=y_plus_two : x_b_2 -> .
		=y_plus_two : x_b_3 -> .
		=y_plus_two : x_b_4 -> .
		=y_plus_two : x_b_5 -> .
		=y_plus_two : x_b_6 -> .
		=y_plus_two : x_b_7 -> .
		=y_plus_two : x_b_8 -> .
        
        =S_DONE & =y_plus_two   :   z_b_1   ->   y_b_1   ,   x_b_1     .
        =S_DONE & =y_plus_two   :   z_b_2   ->   y_b_2   ,   x_b_2     .
        =S_DONE & =y_plus_two   :   z_b_3   ->   y_b_3   ,   x_b_3     .
        =S_DONE & =y_plus_two   :   z_b_4   ->   y_b_4   ,   x_b_4    .
        =S_DONE & =y_plus_two   :   z_b_5   ->   y_b_5   ,   x_b_5    .
        =S_DONE & =y_plus_two   :   z_b_6   ->   y_b_6   ,   x_b_6    .
        =S_DONE & =y_plus_two   :   z_b_7   ->   y_b_7   ,   x_b_7    .
        =S_DONE & =y_plus_two   :   z_b_8   ->   y_b_8   ,   x_b_8    .
  
        
		=S_DONE & =comp_p_sum   : y_b_8 -> z_b_8 .
		=S_DONE & =comp_p_sum   : y_b_7 -> z_b_7 .
		=S_DONE & =comp_p_sum   : y_b_6 -> z_b_6 .
		=S_DONE & =comp_p_sum   : y_b_5 -> z_b_5 .
		=S_DONE & =comp_p_sum   : y_b_4 -> z_b_4 .
		=S_DONE & =comp_p_sum   : y_b_3 -> z_b_3 .
		=S_DONE & =comp_p_sum   : y_b_2 -> z_b_2 .
		=S_DONE & =comp_p_sum   : y_b_1 -> z_b_1 .
		
        =S_DONE & =yy_plus_two   :   z_b_1   ->   y_b_1 .
        =S_DONE & =yy_plus_two   :   z_b_2   ->   y_b_2 .
        =S_DONE & =yy_plus_two   :   z_b_3   ->   y_b_3 .
        =S_DONE & =yy_plus_two   :   z_b_4   ->   y_b_4 .
        =S_DONE & =yy_plus_two   :   z_b_5   ->   y_b_5 .
        =S_DONE & =yy_plus_two   :   z_b_6   ->   y_b_6 .
        =S_DONE & =yy_plus_two   :   z_b_7   ->   y_b_7 .
        =S_DONE & =yy_plus_two   :   z_b_8   ->   y_b_8 .
   		// END of ~ Manage workflow  ~
        
		// LSHIFT(X) 
        =LSHIFT    :         x_b_8   ->   x_b_8   ,    z_b_9     .
        =LSHIFT    :         x_b_7   ->   x_b_7   ,    z_b_8     .
        =LSHIFT    :         x_b_6   ->   x_b_6   ,    z_b_7     .
        =LSHIFT    :         x_b_5   ->   x_b_5   ,    z_b_6     .
        =LSHIFT    :         x_b_4   ->   x_b_4   ,    z_b_5     .
        =LSHIFT    :         x_b_3   ->   x_b_3   ,    z_b_4     .
        =LSHIFT    :         x_b_2   ->   x_b_2   ,    z_b_3     .
        =LSHIFT    :         x_b_1   ->   x_b_1   ,    z_b_2     .
        
        //2*LSHIFT(Y) 
        =LSHIFT2    :         y_b_8   ->   y_b_8   ,    z_b_10    .
        =LSHIFT2    :         y_b_7   ->   y_b_7   ,    z_b_9     .
        =LSHIFT2    :         y_b_6   ->   y_b_6   ,    z_b_8     .
        =LSHIFT2    :         y_b_5   ->   y_b_5   ,    z_b_7     .
        =LSHIFT2    :         y_b_4   ->   y_b_4   ,    z_b_6     .
        =LSHIFT2    :         y_b_3   ->   y_b_3   ,    z_b_5     .
        =LSHIFT2    :         y_b_2   ->   y_b_2   ,    z_b_4     .
        =LSHIFT2    :         y_b_1   ->   y_b_1   ,    z_b_3     .
        
        LSHIFT -> ADD .
		LSHIFT2 -> ADD .
//    }
    
//    max{
//  		=ADD & <6STEP: r -> r, STEP .
  		=ADD & <2z_b_1 & <2z_b_2 & <2z_b_3 & <2z_b_4 & <2z_b_5 & <2z_b_6 & <2z_b_7 & <2z_b_8 :   ADD -> S_DONE .
	//	=6STEP : ADD -> S_DONE .
	//	=6STEP : {STEP} -> .
	}
    
    // Compare
	//BIT 8
	max{
		=cmp_p    & =p_b_8   &   <N_b_8 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_8   &   =N_b_8 :  cmp_p -> P_LESS_N   ,  chk_sol .

	}
	//BIT 7
	max{
		=cmp_p    & =p_b_7   &   <N_b_7 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_7   &   =N_b_7 :  cmp_p -> P_LESS_N   ,  chk_sol .
	}
	//BIT 6
	max{
		=cmp_p    & =p_b_6   &   <N_b_6 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_6   &   =N_b_6 :  cmp_p -> P_LESS_N   ,  chk_sol .
	
	}
	//BIT 5
	max{
		=cmp_p    & =p_b_5   &   <N_b_5 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_5   &   =N_b_5 :  cmp_p -> P_LESS_N   ,  chk_sol .
	}
	//BIT 4
	max{
		=cmp_p    & =p_b_4   &   <N_b_4 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_4   &   =N_b_4 :  cmp_p -> P_LESS_N   ,  chk_sol .

	}
	//BIT 3
	max{
		=cmp_p    & =p_b_3   &   <N_b_3 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_3   &   =N_b_3 :  cmp_p -> P_LESS_N   ,  chk_sol .

	}
	//BIT 2
	max{
		=cmp_p    & =p_b_2   &   <N_b_2 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_2   &   =N_b_2 :  cmp_p -> P_LESS_N   ,  chk_sol .
	
	}
	//BIT 1
	max{
		=cmp_p    & =p_b_1   &   <N_b_1 :  cmp_p -> P_GTR_N   ,  chk_sol .
		=cmp_p    & <p_b_1   &   =N_b_1 :  cmp_p -> P_LESS_N   ,  chk_sol .
	}

	max{
		cmp_p  ->  2chk_sol . 
	}
    // End of Compare   
}